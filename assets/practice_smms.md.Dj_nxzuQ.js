import{_ as s,c as a,o as i,a5 as t}from"./chunks/framework.BTLartk_.js";const E=JSON.parse('{"title":"使用 SMMS 图床","description":"","frontmatter":{},"headers":[],"relativePath":"practice/smms.md","filePath":"practice/smms.md","lastUpdated":1739437242000}'),e={name:"practice/smms.md"},n=t(`<h1 id="使用-smms-图床" tabindex="-1">使用 SMMS 图床 <a class="header-anchor" href="#使用-smms-图床" aria-label="Permalink to &quot;使用 SMMS 图床&quot;">​</a></h1><p>作为远程 API 图床的示例, 本文将介绍如何快速为 Qexo 接入 SMMS 图床一键上传</p><h2 id="api-地址" tabindex="-1">API 地址 <a class="header-anchor" href="#api-地址" aria-label="Permalink to &quot;API 地址&quot;">​</a></h2><p>参考 <a href="https://doc.sm.ms/#api-Image-Upload" target="_blank" rel="noreferrer">文档</a> SM.MS的API接口如下：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://sm.ms/api/v2/upload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="post-参数名" tabindex="-1">POST 参数名 <a class="header-anchor" href="#post-参数名" aria-label="Permalink to &quot;POST 参数名&quot;">​</a></h2><p>阅读<code>参数</code>一栏, 查看请求主体的参数</p><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>smfile</td><td>file</td><td>默认值: <code>multipart/form-data</code></td></tr><tr><td>format</td><td>String</td><td>Return Type: <code>json</code> or <code>xml</code>, the default value is <code>json</code></td></tr></tbody></table><p>通过类型<code>file</code>可以确定图片文件流应该在<code>smfile</code>字段下</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>smfile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="json-路径" tabindex="-1">JSON 路径 <a class="header-anchor" href="#json-路径" aria-label="Permalink to &quot;JSON 路径&quot;">​</a></h2><p>阅读文档<code>Success-Response</code></p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Upload success.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;file_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4677</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3307</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;filename&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;luo.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;storename&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D5VpWCKFElUsPcR.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">801933</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/2019/12/16/D5VpWCKFElUsPcR.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;hash&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Q6vLIbCGZojrMhO2e7BmgFuXRV&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://vip1.loli.net/2019/12/16/D5VpWCKFElUsPcR.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;delete&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://sm.ms/delete/Q6vLIbCGZojrMhO2e7BmgFuXRV&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://sm.ms/image/D5VpWCKFElUsPcR&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;RequestId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;8A84DDCA-96B3-4363-B5DF-524E95A5201A&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>不难看出我们需要的图片 URL 应该在<code>data</code> <code>url</code>下</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data.url</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="自定义请求头" tabindex="-1">自定义请求头 <a class="header-anchor" href="#自定义请求头" aria-label="Permalink to &quot;自定义请求头&quot;">​</a></h2><p>文档描述如下：</p><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>Content-Type</td><td>String</td><td>默认值: <code>multipart/form-data</code></td></tr><tr><td>Authorization</td><td>String</td><td></td></tr></tbody></table><p>发现<code>Content-Type</code>有默认值, 可以留空, 而<code>Authorization</code>为验证字段, 查看 <a href="https://doc.sm.ms/#api-_" target="_blank" rel="noreferrer">文档上文</a> 需要在请求头进行验证, 假设我的 APIKEY 为 <code>abcdefg123456</code> 则填写</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{&quot;Authorization&quot;: &quot;abcdefg123456&quot;}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="自定义请求主体" tabindex="-1">自定义请求主体 <a class="header-anchor" href="#自定义请求主体" aria-label="Permalink to &quot;自定义请求主体&quot;">​</a></h2><p>参考前文 <a href="#post-参数名">POST 参数名</a></p><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>smfile</td><td>file</td><td>默认值: <code>multipart/form-data</code></td></tr><tr><td>format</td><td>String</td><td>Return Type: <code>json</code> or <code>xml</code>, the default value is <code>json</code></td></tr></tbody></table><p>发现其中<code>smfile</code>已经被我们填写, 而<code>format</code>默认就是我们需要的<code>json</code>, 故此栏可以留空</p><h2 id="自定义前缀" tabindex="-1">自定义前缀 <a class="header-anchor" href="#自定义前缀" aria-label="Permalink to &quot;自定义前缀&quot;">​</a></h2><p>本次教程所使用的 SM.MS 图床无需这项配置, 可以留空</p><p>现在, 你已经完成了所有的配置。实际上远程 API 图床配置大同小异, 可以参考这篇教程进行简单的配置就可以使用</p>`,27),p=[n];function l(h,d,r,o,k,c){return i(),a("div",null,p)}const b=s(e,[["render",l]]);export{E as __pageData,b as default};
